{"version":3,"sources":["app.js","run.js","routes.js","directives/menu.js","directives/orderView.js","directives/passwordCheck.js","services/CartService.js","services/CustomerService.js","services/Interceptor.js","services/OrderService.js","services/ProductService.js","services/ValidationService.js","services/dashboardService.js","controllers/admin/adminController.js","controllers/admin/customersController.js","controllers/admin/dashboardController.js","controllers/admin/ordersController.js","controllers/admin/productsAddController.js","controllers/admin/productsController.js","controllers/admin/productsEditController.js","controllers/user/CartController.js","controllers/user/myCartController.js","controllers/user/orderController.js","controllers/user/orderViewController.js","controllers/user/userController.js","controllers/functional/loginController.js","controllers/functional/logoutController.js","controllers/functional/registerController.js"],"names":[],"mappingstHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtrvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACppFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../scripts/all.js","sourcesContent":["'use strict';\nvar myapp = angular.module('myApp', ['ui.router', 'ngMessages'])\n","myapp.run(['$rootScope', '$state', function($rootScope, $state) {\n    $rootScope.$on('$stateChangeSuccess', function(event, to, toParams, from, fromParams) {\n        $rootScope.previousState = function() {\n\n            if (from.name || fromParams) {\n                $state.transitionTo(from.name, fromParams);\n            } else {\n                $state.transitionTo($state.$current.parent);\n            }\n\n        }\n    });\n}]);","'use strict';\n(function() {\n    myapp.config(function($stateProvider, $urlRouterProvider, $locationProvider) {\n        $stateProvider\n    .state('login', {\n        url: '/login',\n        templateUrl: 'templates/html/functional/login.html',\n        controller: 'loginController',\n    })\n    .state('logout', {\n        url: '/logout',\n        controller: 'logoutController'\n    })\n    .state('register', {\n        url: '/register',\n        templateUrl: 'templates/html/functional/register.html',\n        controller: 'registerController'\n    })\n    .state('admin', {\n        url: '/admin',\n        templateUrl: 'templates/html/admin/admin.html',\n        controller: 'adminController'\n    })\n    .state('admin.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'templates/html/admin/dashboard.html',\n        controller: 'dashboardController'\n    })\n            .state('admin.customers', {\n                url: '/customers',\n                templateUrl: 'templates/html/admin/customers.html',\n                controller: 'customersController'\n            })\n            .state('admin.products', {\n                url: '/products',\n                templateUrl: 'templates/html/admin/products.html',\n                controller: 'productsController',\n                resolve: {\n                    Products: function(ProductService) {\n                        return ProductService.getProducts()\n                            .then(function(products) {\n                                return ProductService.data.products = products;\n                            })\n                    }\n                }\n            })\n            .state('admin.products.add', {\n                url: '/add',\n                templateUrl: 'templates/html/admin/productsAdd.html',\n                controller: 'productsAddController',\n                resolve: {\n                    prepareProduct: function(ProductService, $timeout, $http, API) {\n                        return $timeout(function() {\n                            $http.get(API + '/api/products/add', function(response) {\n                                return response;\n                            })\n                        });\n                    }\n                }\n            })\n            .state('admin.products.edit', {\n                url: '/:id',\n                templateUrl: 'templates/html/admin/productsEdit.html',\n                controller: 'productsEditController',\n                resolve: {\n                    editProduct: function(ProductService, $stateParams, $timeout) {\n                        return $timeout(function() {\n                            var routeId = parseInt($stateParams.id);\n                            return ProductService.getProducts(routeId).then(function(products) {\n                                var productId = products.map(function(product) {\n                                    return product.id;\n                                }).indexOf(routeId);\n\n                                return products[productId];\n                            });\n                        })\n                    }\n                }\n            })\n            .state('admin.orders', {\n                url: '/orders',\n                templateUrl: 'templates/html/admin/orders.html',\n                controller: 'ordersController'\n            })\n            .state('admin.orders.detail', {\n                url: '/:id',\n                templateUrl: 'templates/html/admin/orderView.html',\n                controller: 'orderViewController'\n            })\n            .state('user', {\n                url: '/user',\n                templateUrl: 'templates/html/user/user.html',\n                controller: 'userController'\n            })\n            .state('user.products', {\n                url: '/products',\n                templateUrl: 'templates/html/user/products.html',\n                controller: 'CartController'\n            })\n            .state('user.cart', {\n                url: '/mycart',\n                templateUrl: 'templates/html/user/cart.html',\n                controller: 'myCartController'\n            })\n            .state('user.order', {\n                url: '/order',\n                templateUrl: 'templates/html/user/order.html',\n                controller: 'orderController'\n            })\n            .state('user.order.detail', {\n                url: '/:id',\n                templateUrl: 'templates/html/user/orderView.html',\n                controller: 'orderViewController'\n            });\n\n        $urlRouterProvider.otherwise('/login');\n\n    });\n})();","'use strict';\n(function() {\nangular.module('myApp')\n\t.directive('menu', [function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\ttemplateUrl: 'templates/html/functional/_menu.html',\n\t\t\tscope: {\n\t\t\t\tcontent: '='\n\t\t\t},\n\t\t\tlink: function($scope, $element, $attrs) {\n\t\t\t\t$scope.element = $element;\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t//console.log($scope.element); // wyswietli html elementu na ktory jest nalozona dyrektywa\n\t\t\t}\n\t\t}\n\t}]);\n})();","'use strict';\n(function() {\nangular.module('myApp')\n    .directive('orderView', [function() {\n        return {\n            restrict: 'E',\n            replace: false,\n            templateUrl: 'templates/html/functional/_orderview.html',\n            link: function($scope, $element, $attrs) {\n                $scope.element = $element;\n            }\n        }\n    }]);\n})();","'use strict';\n(function() {\n    angular.module('myApp')\n        .directive('pwCheck', [function() {\n            return {\n                require: 'ngModel',\n                link: function(scope, elem, attrs, ctrl) {\n                    var password = \"#\" + attrs.pwCheck;\n                    $(elem).add(password).on('keyup', function() {\n                        scope.$apply(function() {\n                            ctrl.$setValidity('pwmatch', elem.val() === $(password).val());\n                        });\n                    });\n                }\n            };\n        }]);\n})();","(function() {\n    myapp.service('CartService', CartService);\n    CartService.$inject = ['$http', '$timeout', 'API'];\n\n    function CartService($http, $timeout, API) {\n\n        //set variables for this service to access them globally\n        var local = this;\n        local.data = {};\n\n        local.getProducts = function(id) {\n            return $http.get(API + '/api/products/all', id)\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.orderProducts = function(obj) {\n            return $http.post(API + '/api/products/order', obj)\n            .then(function(response) {\n                return response;\n            });\n        };\n\n        local.getFromStorage = function() {\n            const cart = sessionStorage.getItem(\"shoppingCart\");\n            return JSON.parse(cart);\n        };\n\n        local.getName = function() {\n            return sessionStorage.getItem(\"username\");\n        };\n    };\n\n\n}());","(function() {\n    myapp.service('CustomerService', CustomerService);\n    CustomerService.$inject = ['$http', '$timeout', 'API'];\n\n    function CustomerService($http, $timeout, API) {\n\n        //set variables for this service to access them globally\n        var local = this;\n        local.data = {};\n\n        local.getCustomers = function() {\n            return $http.get(API + '/api/customers/all')\n                .then(function(response) {\n                    return response;\n                });\n        };\n\n        local.deleteCustomers = function(id) {\n            return $http.delete(API + '/api/customers/' + id).then(function(response) {\n                return response.status;\n            });\n        };\n        /// dont touch nothing below\n        return local;\n    };\n\n\n}());","'use strict';\n\nangular.module('myApp')\n    .factory('httpRequestInterceptor', ['$rootScope', function($rootScope) {\n        return {\n            request: function($config) {\n                if (sessionStorage.getItem('token')) {\n                    $config.headers['Authorization'] = sessionStorage.getItem('token');\n                }\n                return $config;\n            }\n        };\n    }])\n    .config(['$httpProvider', function($httpProvider) {\n        $httpProvider.interceptors.push('httpRequestInterceptor');\n    }])\n    .constant('API', 'http://localhost:9090');","(function() {\n    myapp.service('orderService', orderService);\n    orderService.$inject = ['$http', '$timeout', 'API'];\n\n    function orderService($http, $timeout, API) {\n\n        //set variables for this service to access them globally\n        var local = this;\n        local.data = {};\n\n        local.getOrder = function(obj) {\n            return $http.post(API + '/api/order/me', {\n                userId: obj\n            }).then(function(response) {\n                return JSON.parse(response.data);\n            });\n        };\n\n        local.getAllOrder = function() {\n            return $http.get(API + '/api/order/all').then(function(response) {\n                return JSON.parse(response.data);\n            });\n        };\n\n        local.getOrderDetail = function(id){\n            return $http.get(API + '/api/order/' + id).then(function(response){\n                return response.data;\n            })\n        };\n\n        local.deleteOrder = function(id) {\n            return $http.delete(API + '/api/order/' + id).then(function(response) {\n                return response.status;\n            });\n        };\n    };\n\n\n}());","(function() {\n    myapp.service('ProductService', ProductService);\n    ProductService.$inject = ['$http', '$timeout', 'API'];\n\n    function ProductService($http, $timeout, API) {\n        //set variables for this service to access them globally\n        var local = this;\n        local.data = {};\n        // ProductService.data ktory dziedziczy po this\n        local.routerData = {};\n\n        local.getProducts = function() {\n\n            return $http.get(API + '/api/products/all')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.getCategory = function() {\n            return $http.get(API + '/api/product/category')\n                .then(function(response) {\n                    return response;\n                });\n        };\n\n        local.editProduct = function(obj) {\n            return $http.put(API + '/api/products/save', {\n                data: obj\n            }).then(function(response) {\n                return response.status;\n            });\n        };\n\n        local.addProduct = function(obj) {\n            return $http.post(API + '/api/products/add', {\n                data: obj\n            }).then(function(response) {\n            return response.data.newProductId;\n            })\n        }\n\n\n        local.deleteProduct = function(id) {\n            return $http.delete(API + '/api/products/' + id).then(function(response) {\n                return response.status;\n            });\n        };\n\n        return local;\n\n    }\n\n\n}());","'use strict';\n\n(function() {\n    myapp.service('ValidationService', ValidationService);\n    ValidationService.$inject = ['$q', '$http', '$timeout', 'API'];\n\n    function ValidationService($q, $http, $timeout, API) {\n\n        return {\n\n            userData: {},\n            createData: {},\n\n            signIn: function(login, password) {\n                var promise = $q.defer(); //nowy promise\n                var self = this;\n\n                $http.post(API + '/api/sign_in', {\n                    user: {\n                        login: login,\n                        password: password\n                    }\n                }).error(function(response, status, headers) {\n                    promise.reject(response); // sprawia ze promise przestaje oczekiwać\n                }).success(function(response, headers) {\n                    self.userData = response.user; // do userdata przypisujemy token/role\n                    sessionStorage.setItem('token', response.user.token);\n                    sessionStorage.setItem('username', response.user.id);\n                    promise.resolve(response);\n                });\n\n                return promise.promise;\n            },\n\n            signUp: function(login, password) {\n                var promise = $q.defer();\n                var self = this;\n\n                $http.post(API + '/api/sign_up/', {\n                    user: {\n                        login: login,\n                        password: password\n                    }\n                }).success(function(response) {\n                    if (response == \"OK\") {\n                        swal(\"Great Job!\", \"You create Your account\", \"success\");\n                        promise.resolve(response);\n                    } else {\n                        swal(\"Some Error!\", \"You need fix your mistake\", \"error\");\n                        promise.reject(response);\n                    }\n                }).error(function(response) {\n                    promise.reject(response);\n                });\n\n                return promise.promise;\n            }\n\n        }\n\n    };\n\n\n})();","(function() {\n    myapp.service('dashboardService', dashboardService);\n    dashboardService.$inject = ['$http', '$timeout', 'API'];\n\n    function dashboardService($http, $timeout, API) {\n\n        //set variables for this service to access them globally\n        var local = this;\n        local.data = {};\n\n        local.getCategory = function() {\n            return $http.get(API + '/api/dashboard/category')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.getCustomers = function() {\n            return $http.get(API + '/api/dashboard/customers')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.getProducts = function() {\n            return $http.get(API + '/api/dashboard/products')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.getOrders = function() {\n            return $http.get(API + '/api/dashboard/orders')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n\n        local.getGain = function() {\n            return $http.get(API + '/api/dashboard/gain')\n                .then(function(response) {\n                    return response.data;\n                });\n        };\n    };\n}());","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('adminController', adminController);\n\n    adminController.$inject = ['$scope', 'ValidationService', '$state'];\n\n    function adminController($scope, ValidationService, $state) {\n\n        if (ValidationService.userData.rola !== 'admin') {\n            $state.go('login');\n        }\n\n        $scope.adminMenu = [{\n            icon: 'fa fa-tachometer',\n            state: 'admin.dashboard',\n            text: 'Dashboard'\n        }, {\n            icon: 'fa fa-users',\n            state: 'admin.customers',\n            text: 'Customers'\n        }, {\n            icon: 'fa fa-gift',\n            state: 'admin.products',\n            text: 'Products'\n        }, {\n            icon: 'fa fa-truck',\n            state: 'admin.orders',\n            text: 'Orders'\n        }, {\n            icon: 'fa fa-sign-out',\n            state: 'logout',\n            text: 'Log out'\n        }];\n\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('customersController', customersController);\n\n    customersController.$inject = ['$scope', '$http', 'CustomerService', 'API'];\n\n    function customersController($scope, $http, CustomerService, API) {\n        $scope.sortType = 'id';\n        $scope.sortReverse = false;\n        CustomerService.getCustomers().then(function(response) {\n            $scope.category = response.data;\n        });\n        $scope.resetPassword = function(login) {\n            swal({\n                    title: \"Are you sure reset password?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: \"Yes, reset password!\",\n                    closeOnConfirm: false\n                },\n                function() {\n                    $http.post(API + '/api/customers/resetpassword', {\n                            login: login\n                        })\n                        .then(function(response) {\n                            if (response.status == 200) {\n                                swal(\n                                    'Changed!',\n                                    'Passwrod has been reset!',\n                                    'success'\n                                );\n                            }\n                        });\n                });\n        };\n        $scope.deleteCustomers = function(item) {\n            swal({\n                    title: \"Are you sure?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: \"Yes, delete it!\",\n                    closeOnConfirm: false\n                },\n                function() {\n                    CustomerService.deleteCustomers(item.id).then(function(response) {\n                        var index = $scope.category.indexOf(item);\n                        if (response === 200) {\n                            $scope.category.splice(index, 1);\n                            swal(\"Deleted!\", \"Customer has been removed\", \"success\");\n                        }\n                    })\n                });\n        }\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('dashboardController', dashboardController);\n\n    dashboardController.$inject = ['$scope', 'dashboardService', 'API'];\n\n    function dashboardController($scope, dashboardService, API) {\n\n        dashboardService.getCategory()\n            .then(function(response) {\n                $scope.category = response;\n                $scope.data = [];\n                $scope.nazwa_kategoria = [];\n                for (var i = 0; i < response.length; i++) {\n                    $scope.data.push($scope.category[i].ilosc);\n                }\n                for (var i = 0; i < response.length; i++) {\n                    $scope.nazwa_kategoria.push($scope.category[i].nazwa_kategoria);\n                }\n                var width = 500,\n                    height = 300,\n                    radius = Math.min(width, height) / 2 - 20;\n\n                var color = d3.scale.ordinal()\n                    .range([\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\"]);\n                var pie = d3.layout.pie()\n                    .padAngle(.05)\n                    .value(function(d) {\n                        return d;\n                    });\n\n                var arc = d3.svg.arc()\n                    .innerRadius(60)\n                    .outerRadius(radius);\n\n                var svg = d3.selectAll(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n                var category = svg.selectAll(\".category\")\n                    .data(pie($scope.data))\n                    .enter().append(\"g\")\n                    .attr('class', 'category');\n\n                var path = category.append(\"path\")\n                    .attr(\"fill\", function(d, i) {\n                        return color(i);\n                    })\n                    .attr(\"d\", arc)\n\n                var text = category.append(\"text\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + arc.centroid(d) + \")\";\n                    })\n                    .attr(\"text-anchor\", \"middle\")\n                    .text(function(d, i) {\n                        return $scope.nazwa_kategoria[i] + \": \" + $scope.data[i];\n                    });\n\n            });\n\n\n        dashboardService.getCustomers()\n            .then(function(response) {\n                $scope.customers = response;\n            });\n\n        dashboardService.getProducts()\n            .then(function(response) {\n                $scope.products = response;\n            });\n\n        dashboardService.getOrders()\n            .then(function(response) {\n                $scope.orders = response;\n            });\n\n        dashboardService.getGain()\n            .then(function(response) {\n                $scope.gain = response;\n            });\n\n    }\n})();","'use strict';\n\n(function() {\n\n    angular.module('myApp')\n        .controller('ordersController', ordersController);\n\n    ordersController.$inject = ['$scope', 'orderService', 'CartService'];\n\n    function ordersController($scope, orderService, CartService) {\n        $scope.sortType = 'id';\n        $scope.sortReverse = false;\n\n        var userId = CartService.getName();\n\n        orderService.getAllOrder().then(function(response) {\n            return $scope.orders = response;\n        });\n\n        $scope.deleteOrder = function(item) {\n            swal({\n                    title: \"Are you sure?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: \"Yes, delete it!\",\n                    closeOnConfirm: false\n                },\n                function() {\n                    orderService.deleteOrder(item.id).then(function(response) {\n                        var index = $scope.orders.indexOf(item);\n                        if (response === 200) {\n                            $scope.orders.splice(index, 1);\n                            swal(\"Deleted!\", \"Product has been removed\", \"success\");\n                        }\n                    })\n                });\n        };\n    }\n})();","'use strict';\n\n(function() {\n\n    angular.module('myApp')\n        .controller('productsAddController', productsAddController);\n\n    productsAddController.$inject = ['$http', '$scope', 'ProductService', '$state'];\n\n    function productsAddController($http, $scope, ProductService, $state) {\n        $scope.newProduct = {};\n\n        $scope.addNewProduct = function() {\n            ProductService.addProduct($scope.newProduct).then(function(response) {\n\n                swal(\n                    'Added!',\n                    'Product has been added!',\n                    'success'\n                );\n\n                $state.go('admin.products');\n            });\n        };\n\n        ProductService.getCategory()\n            .then(function(response) {\n                $scope.category = response.data;\n            });\n    }\n})();","'use strict';\n\n(function() {\n\n    angular.module('myApp')\n        .controller('productsController', productsController);\n\n    productsController.$inject = ['$scope', 'ProductService', '$filter'];\n\n    function productsController($scope, ProductService, $filter) {\n\n        $scope.sortType = 'id';\n        $scope.sortReverse = false;\n\n        $scope.products = ProductService.data.products;\n\n        $scope.deleteProduct = function(item) {\n            swal({\n                    title: \"Are you sure?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: \"Yes, delete it!\",\n                    closeOnConfirm: false\n                },\n                function() {\n                    ProductService.deleteProduct(item.id).then(function(response) {\n                        var index = $scope.products.indexOf(item);\n                        if (response === 200) {\n                            $scope.products.splice(index, 1);\n                            swal(\"Deleted!\", \"Product has been removed\", \"success\");\n                        }\n                    })\n                });\n        };\n    }\n})();","(function() {\n'use strict'\n\n    angular.module('myApp')\n        .controller('productsEditController', ['$scope', '$stateParams', 'ProductService', 'editProduct', '$state',\n            function($scope, $stateParams, ProductService, editProduct, $state) {\n                if (editProduct) {\n                    $scope.product = editProduct;\n                }\n                ProductService.getCategory()\n                    .then(function(response) {\n                        return $scope.category = response.data;\n                    });\n                $scope.editProduct = function() {\n                    ProductService.editProduct($scope.product).then(function(response) {\n                        if (response === 200) {\n                            swal(\n                                'Changed!',\n                                'Product has been changed!',\n                                'success'\n                            );\n                        };\n                        $state.go('admin.products');\n                    });\n                };\n            }\n        ]);\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('CartController', CartController);\n\n    CartController.$inject = ['$scope', 'CartService'];\n\n    function CartController($scope, CartService) {\n        CartService.getProducts()\n            .then(function(response) {\n                return $scope.products = response;\n            });\n\n        $scope.cartData = [];\n\n        $scope.removeFromCard = function(id) {\n            $scope.cartData.splice(id, 1);\n        }\n\n        $scope.addToCard = function(id, nazwa, cena, kategoria) {\n            var obj = {\n                'id': id,\n                'nazwa': nazwa,\n                'ilosc': 1,\n                'Kategorie': kategoria,\n                'cena': cena\n            };\n\n            if ($scope.cartData.find(el => el.id === id)) {\n                const index = $scope.cartData.findIndex(el => el.id === id)\n                if (index !== -1) {\n                    $scope.cartData[index].ilosc++;\n                }\n            } else {\n                $scope.cartData.push(obj);\n            }\n        }\n\n        $scope.moreItem = function(id) {\n            if ($scope.cartData.find(el => el.id === id)) {\n                const index = $scope.cartData.findIndex(el => el.id === id)\n                if (index !== -1) {\n                    $scope.cartData[index].ilosc++;\n                } else {\n\n                }\n            }\n        }\n\n        $scope.lessItem = function(id) {\n            if ($scope.cartData.find(el => el.id === id)) {\n                const index = $scope.cartData.findIndex(el => el.id === id)\n                if (index !== -1) {\n                    $scope.cartData[index].ilosc--;\n                } else {\n\n                }\n            }\n        }\n        var totals = [];\n\n        $scope.totalPrice = function() {\n\n            var buy = $scope.cartData;\n            buy.filter(function(item) {\n                var itemPrice = item.cena * item.ilosc;\n                totals.push(itemPrice);\n            });\n\n\n            var sumTotals = 0;\n            totals = totals.filter(function(item) {\n                sumTotals += item;\n            });\n            return sumTotals;\n        }\n\n        $scope.setCart = function() {\n                sessionStorage.setItem('shoppingCart', JSON.stringify($scope.cartData));\n                swal(\"Cart Saved!\", \"Go to Shopping Cart\", \"success\");\n            }\n            //end\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('myCartController', myCartController);\n\n    myCartController.$inject = ['$scope', 'CartService', '$http', 'API', '$state'];\n\n    function myCartController($scope, CartService, $http, API, $state) {\n\n        var init = (function() {\n            var totalPrice = function(cartData) {\n                return cartData.map((item) => {\n                    return item.cena * item.ilosc;\n                }).reduce((a, b) => {\n                    return a + b;\n                });\n            };\n            const cart = CartService.getFromStorage();\n            if (!cart) return;\n            $scope.cart = cart;\n            $scope.sum = totalPrice(cart);\n        })();\n\n        var totalPrice = function(cartData) {\n            return cartData.map((item) => {\n                return item.cena * item.ilosc;\n            }).reduce((a, b) => {\n                return a + b;\n            });\n        };\n\n        var save = function(data) {\n            $http.post(API + '/api/order/new', {\n                    data\n                })\n                .success(() => {\n                    sessionStorage.removeItem('shoppingCart');\n                    swal(\n                        'Great!',\n                        'You have ordered products!',\n                        'success'\n                    );\n                    //$state.go('order')\n                })\n                .error(() => {\n                    swal(\n                        'Error!',\n                        'Problem with connect to database!',\n                        'error'\n                    );\n                });\n        };\n\n        var onSave = function() {\n            if (!$scope.cart) return;\n            const cart = [];\n            $scope.cart.map(function(data) {\n                cart.push({\n                    productId: data.id,\n                    count: data.ilosc\n                });\n            });\n            const username = CartService.getName();\n            const order = {\n                cart: cart,\n                userId: username\n            };\n            save(JSON.stringify(order));\n        };\n\n        Object.assign($scope, {\n            onSave\n        });\n\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('orderController', orderController);\n\n    orderController.$inject = ['$scope', 'CartService', 'orderService'];\n\n    function orderController($scope, CartService, orderService) {\n        $scope.sortType = 'id';\n        $scope.sortReverse = false;\n\n        var userId = CartService.getName();\n\n        orderService.getOrder(userId).then(function(response) {\n            return $scope.order = response;\n        });\n\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('orderViewController', orderViewController);\n\n    orderViewController.$inject = ['$scope', 'CartService', 'orderService', '$stateParams'];\n\n    function orderViewController($scope, CartService, orderService, $stateParams) {\n\n            orderService.getOrderDetail($stateParams.id).then(function(response) {\n                var data = response.detail;\n                var totalPrice = function(data) {\n                    return data.map((item) => {\n                        return item.cena * item.ilosc;\n                    }).reduce((a, b) => {\n                        return a + b;\n                    });\n                };\n                $scope.sum = totalPrice(data);\n                return $scope.orderDetail = response;\n            });\n            //end\n        }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('userController', userController);\n\n    userController.$inject = ['$scope', 'ValidationService', '$state'];\n\n    function userController($scope, ValidationService, $state) {\n\n            if (ValidationService.userData.rola !== 'user') {\n                $state.go('login');\n            }\n\n            $scope.userMenu = [{\n                icon: 'fa fa-gift',\n                state: 'user.products',\n                text: 'Products'\n            }, {\n                icon: 'fa fa-shopping-cart',\n                state: 'user.cart',\n                text: 'Shopping Cart'\n            }, {\n                icon: 'fa fa-truck',\n                state: 'user.order',\n                text: 'My Order'\n            }, {\n                icon: 'fa fa-sign-out',\n                state: 'logout',\n                text: 'Log out'\n            }];\n\n        }\n})();","'use strict';\n\n(function() {\n\n    angular.module('myApp')\n        .controller('loginController', loginController);\n\n    loginController.$inject = ['$scope', 'ValidationService', '$state'];\n\n    function loginController($scope, ValidationService, $state) {\n\n        $scope.signIn = function(login, password) {\n            ValidationService.signIn(login, password)\n                .then(function(response) {\n                    //poprawna odpowiedz serwera\n                    if (ValidationService.userData.rola === 'admin')\n                        $state.go('admin.dashboard');\n                    else if (ValidationService.userData.rola === 'user') {\n                        $state.go('user.products');\n                    }\n                }, function(response) {\n                    //niepoprawna odpowiedz serwera\n                    swal(\"Some Error!\", \"You need fix your mistake\", \"error\");\n                });\n        };\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('logoutController', logoutController);\n\n    logoutController.$inject = ['$scope', 'ValidationService', '$state'];\n\n    function logoutController($scope, ValidationService, $state) {\n        $state.go('login');\n        sessionStorage.clear();\n    }\n})();","'use strict';\n\n(function() {\n    angular.module('myApp')\n        .controller('registerController', registerController);\n\n    registerController.$inject = ['$scope', 'ValidationService', '$state'];\n\n    function registerController($scope, ValidationService, $state) {\n        $scope.signUp = function(login, password, passwordRepeat) {\n            ValidationService.signUp(login, password, passwordRepeat)\n                .then(function(response) {\n                    //poprawna odpowiedz serwera\n                    $state.go('login');\n                }, function(response) {\n                    //niepoprawna odpowiedz serwera\n                    $state.go('register');\n                });\n        };\n    }\n})();"]}